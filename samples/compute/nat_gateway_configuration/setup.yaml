---
# Copyright (c) 2020, 2021 Oracle and/or its affiliates.
# This software is made available to you under the terms of the GPL 3.0 license or the Apache 2.0 license.
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
# Apache License v2.0
# See LICENSE.TXT for details.

#==========================================================================================

- name: 인스턴스에 연결하는 데 사용할 임시 SSH 키 쌍을 저장할 임시 디렉토리 만들기
  tempfile:
    state: directory
    suffix: cert
  register: result
- set_fact:
    temp_certificates_path: "{{ result.path }}"

- name: 프라이빗 키 생성
  openssl_privatekey:
    path: "{{ temp_certificates_path }}/private_key.pem"
    type: RSA
    size: 2048
- set_fact:
    my_test_public_key: "{{ temp_certificates_path }}/public_key.pem"

- name: 퍼블릭 키 생성
  openssl_publickey:
    path: "{{ my_test_public_key }}"
    privatekey_path: "{{ temp_certificates_path }}/private_key.pem"
    format: OpenSSH

#==========================================================================================
- name: VCN 만들기
  oci_network_vcn:
    compartment_id: "{{ instance_compartment }}"
    display_name: "{{ vcn_name }}"
    cidr_block: "{{ vcn_cidr_block }}"
  register: result
- set_fact:
    vcn_id: "{{ result.vcn.id }}"

#==========================================================================================
- name: NAT Gateway 만들기
  oci_network_nat_gateway:
    compartment_id: "{{ instance_compartment }}"
    vcn_id: "{{ vcn_id }}"
    name: "{{ ng_name }}"
  register: result
- set_fact:
    ng_id: "{{ result.nat_gateway.id }}"

#########################################
# Private subnet
#########################################
#==========================================================================================

# 프라이빗 서브넷을 위한 보안 목록 생성
- name: 프라이빗 서브넷을 위한 보안 목록 생성
  oci_network_security_list:
    name: "{{ private_subnet_securitylist_name }}"
    compartment_id: "{{ instance_compartment }}"
    vcn_id: '{{ vcn_id }}'
    ingress_security_rules:
      # SSH 연결 허용
      - source: "{{ public_subnet_cidr }}"
        protocol: "{{ TCP_protocol }}"
        tcp_options:
          destination_port_range:
            min: "{{ SSH_port }}"
            max: "{{ SSH_port }}"
    egress_security_rules:
      # Allow ssh connections outside
      - destination: "{{ quad_zero_route }}"
        protocol: "all"
  register: result
- set_fact:
    private_subnet_security_list_ocid: "{{ result.security_list.id }}"
#==========================================================================================

- name: 프라이빗 서브넷에서 NAT Gateway로 접근하기 위한 라우트 테이블 생성
  oci_network_route_table:
    compartment_id: "{{ instance_compartment }}"
    vcn_id: "{{ vcn_id }}"
    name: "{{ private_subnet_route_table_name }}"
    route_rules: "{{ private_subnet_route_table_rules }}"
  register: result
- set_fact:
    private_subnet_rt_id: "{{ result.route_table.id }}"

#==========================================================================================

- name: 프라이빗 인스턴스를 호스트하는 프라이빗 서브넷 생성. 보안 목록과 라우트 테이블을 링크한다.
  oci_network_subnet:
    availability_domain: "{{ instance_ad }}"
    cidr_block: "{{ private_subnet_cidr }}"
    compartment_id: "{{ instance_compartment }}"
    display_name: "{{ private_subnet_name }}"
    prohibit_public_ip_on_vnic: false
    route_table_id: "{{ private_subnet_rt_id }}"
    security_list_ids: [ "{{ private_subnet_security_list_ocid }}" ]
    vcn_id: '{{ vcn_id }}'
  register: result
- set_fact:
    private_subnet_id: "{{ result.subnet.id }}"

#==========================================================================================

- name: NAT 게이트웨이를 통해 인터넷에 엑세스 하는 서브넷에 인스턴스를 생성한다.
  oci_compute_instance:
    availability_domain: "{{ instance_ad }}"
    compartment_id: "{{ instance_compartment }}"
    name: "{{ private_subnet_instance_name }}_{{ item }}"
    image_id: "{{ instance_image }}"
    shape: "{{ instance_shape }}"
    create_vnic_details:
        assign_public_ip: False
        subnet_id: "{{ private_subnet_id }}"
    metadata:
        ssh_authorized_keys: "{{ lookup('file',  my_test_public_key ) }}"
  register: result
  loop:
    - 1
    - 2
- set_fact:
    private_subnet_instance_id1: "{{ result.instance.id[1] }}"
    private_subnet_instance_id2: "{{ result.instance.id[2] }}"


#==========================================================================================

- name: 인스턴스의 VNCI 부착물의 세부 정보를 가져온다.
  oci_compute_vnic_attachment_facts:
    compartment_id: "{{ instance_compartment }}"
    instance_id: "{{ private_subnet_instance_id }}"
  register: result

- name: VNIC의 세부 정보를 가져온다.
  oci_network_vnic_facts:
    id: "{{ result.vnic_attachments[0].vnic_id }}"
  register: result
- set_fact:
    private_instance_private_ip: "{{result.vnic.private_ip}}"

- name: 인스턴스의 프라이빗 IP를 출력한다
  debug:
    msg: "프라이빗 서브넷에 생성된 인스턴스의 프라이빗 IP는 {{ private_instance_private_ip }}입니다."
