---
- name: 인스턴스를 시작하고 SSH를 사용하여 연결
  hosts: localhost
  collections:
    - oracle.oci
  vars:
    # 네트워크를 정의한다
    quad_zero_route: "0.0.0.0/0"
    TCP_protocol: "6"
    SSH_port: "22"

    vcn_name: "vnc02"
    vcn_cidr_block: "192.168.0.0/16"
    vcn_dns_label: "vcn02.oraclevcn.com"

    ig_name: "igw"

    route_table_name: "igw route table"
    # 인터넷 게이트웨이 라우팅 테이블 설정
    route_table_rules:
        - cidr_block: "{{ quad_zero_route }}"
          network_entity_id: "{{ ig_id }}"


    subnet_cidr: "192.168.1.0/24"
    subnet_name: "public subnet"
    subnet_dns_label: "publicsubnet.vcn02.oraclevcn.com"

    securitylist_name: "SSH to Server"

    instance_shape: "{{ lookup('env', 'SAMPLE_INSTANCE_SHAPE') | default('VM.Standard.E2.1.Micro', true) }}"
    instance_hostname: "mytestinstance"

    #########################################
    # Tenancy specific configuration
    # *Note* - 테넌시를 기준으로 다음 변수를 재정의하거나 해당 환경 변수에 대한 유효한 값을 설정한다. 
    #########################################
    instance_ad: "{{ lookup('env', 'SAMPLE_AD_NAME') }}"
    instance_compartment: "{{ lookup('env', 'SAMPLE_COMPARTMENT_OCID') }}"
    # provide an "OL" image
    # find OL image ocids per region here: https://docs.cloud.oracle.com/iaas/images/image/501c6e22-4dc6-4e99-b045-cae47aae343f/
    instance_image: "{{ lookup('env', 'SAMPLE_IMAGE_OCID') }}"

  tasks:
    - block:
      - import_tasks: setup.yaml

      - set_fact:
          SSH_AUTHORIZED_KEYS: "{{ lookup('env', 'SAMPLE_PUBLIC_SSH_KEY') if 'SAMPLE_PUBLIC_SSH_KEY' in ansible_env else lookup('file',  my_test_public_key ) }}"

      - name: Launch an instance
        oci_compute_instance:
          availability_domain: "{{ instance_ad }}"
          compartment_id: "{{ instance_compartment }}"
          name: "my_test_instance"
          image_id: "{{ instance_image }}"
          shape: "{{ instance_shape }}"
          create_vnic_details:
              assign_public_ip: True
              hostname_label: "{{ instance_hostname }}"
              subnet_id: "{{ instance_subnet_id }}"
          metadata:
              ssh_authorized_keys: "{{ SSH_AUTHORIZED_KEYS }}"
        register: result

      - name: Print instance details
        debug:
          msg: "Launched a new instance {{ result }}"
      - set_fact:
          instance_id: "{{result.instance.id }}"

      - name: Get the VNIC attachment details of instance
        oci_compute_vnic_attachment_facts:
          compartment_id: "{{ instance_compartment }}"
          instance_id: "{{ instance_id }}"
        register: result

      - name: Get details of the VNIC
        oci_network_vnic_facts:
          id: "{{ result.vnic_attachments[0].vnic_id }}"
        register: result
      - set_fact:
          instance_public_ip: "{{result.vnic.public_ip}}"

      - name: Print the public ip of the newly launched instance
        debug:
          msg: "Public IP of launched instance {{ instance_public_ip }}"

      - name: Wait (upto 10 minutes) for port 22 to become open
        wait_for:
          port: 22
          host: '{{ instance_public_ip }}'
          state: started
          delay: 10
          timeout: 600
        vars:
          ansible_connection: local

      - set_fact:
          # Use "opc" user as this is an OL image
          # Disable SSH's strict host key checking just for this one command invocation
          ssh_command_with_generated_key: ssh -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" -i {{ temp_certificates_path }}/private_key.pem opc@{{ instance_public_ip }} uname -a
        when: "'SAMPLE_PUBLIC_SSH_KEY' not in ansible_env"
      
      - set_fact:
          # Use "opc" user as this is an OL image
          # Disable SSH's strict host key checking just for this one command invocation
          ssh_command_with_custom_key: ssh -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" opc@{{ instance_public_ip }} uname -a
        when: "'SAMPLE_PUBLIC_SSH_KEY' in ansible_env"

      - name: 인스턴스에 SSH 접속을 시도한다.
        command: "{{ ssh_command_with_custom_key if 'SAMPLE_PUBLIC_SSH_KEY' in ansible_env else ssh_command_with_generated_key }}"
        retries: 3
        delay: 5
        register: result
        until: result.rc == 0

      - name: 인스턴스에서의 SSH 응답을 출력한다.
        debug:
          msg: "SSH response from instance -> {{ result.stdout_lines }}"

      # - import_tasks: teardown.yaml

      # rescue:

      #   - import_tasks: teardown.yaml